
@{
    ViewBag.Title = "静态数据";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Scripts.Render("~/bundles/Ztreejs")
@Styles.Render("~/plug/zTree_v3/css/metroStyle/metroStyle.css")


<div class="content-padding">
    <ul id="TreeContainer" class="ztree"></ul>
</div>

<script>
    //ztree api使用方法：http://www.treejs.cn/v3/api.php

    layui.use(['layer'], function ()
    {
        var $ = layui.jquery,
            layer = layui.layer,
            Cm_editMode = $.Cm_Setting.editMode,
            newCount = 1,
            $zTreeObj,
            TreeContainer = "TreeContainer",
            setting =
            {
                async: {
                    enable: true,
                    type: "get",
                    contentType: "application/json",
                    dataType: "json",
                    url:function(treeId, treeNode) 
                    {
                        var _baseUrl="@Url.Content("~/odata/T_XT_Data_Entity")",
                            _select="?$orderby=SortIndex&$select=DataId,DataName,SubItemAmount",
                            _filter = "&$filter=IsDeleted eq false and ParentId eq '" + treeNode.id+ "'";
                        return _baseUrl + _select + _filter;
                    },
                    dataFilter: function (treeId, parentNode, responseData)
                    {
                        var ret = [];
                        $.each(responseData.value, function (_i, _t) {
                            ret.push({ id: _t.DataId, name: _t.DataName, isParent: !!_t.SubItemAmount});
                        });
                        return ret;
                    }
                },
                view: {
                    addHoverDom: function (treeId, treeNode)
                    {
                        if (treeNode.editNameFlag || $("#toolbar_" + treeNode.tId).length > 0) return;
                        var $sObj = $("#" + treeNode.tId + "_span"),
                            $toolBar = $("<span>", { "id": "toolbar_" + treeNode.tId }),
                            IsRoot = treeNode.id == "root",
                            refreshNode = function ()
                            {
                                $toolBar = $("#toolbar_" + treeNode.tId);
                                var $a_box = $toolBar.parent();
                                $toolBar.remove();
                                $a_box.removeClass("curSelectedNode").click();
                            },
                            $btnAdd = $("<span>", { "class": "button add", "title": "增加子节点" }).click(function () {
                                var options =
                                {
                                    editMode: Cm_editMode.add,
                                    pageData: {
                                        ParentId: treeNode.id,
                                        ParentName: treeNode.name
                                    }
                                };

                                $.Cm_Ajax.getAsync("@Url.Content("~/odata/T_XT_Data_Entity")" + "/$count/?$filter=IsDeleted eq false and ParentId eq '" + treeNode.id + "'").done(function (xhr) {
                                    options.pageData.SortIndex = xhr &&(xhr+1)||1;
                                }).always(function() {
                                    showForm(options, function (backData) {
                                        if (backData) {
                                            $zTreeObj.addNodes(treeNode, {
                                                id: backData.id, pId: backData.pId, name: backData.name
                                            });
                                        }
                                    });
                                });
                            }),
                            $btnEdit = $("<span>", { "class": "button edit", "title": "修改" }).click(function () {
                                var options =
                                {
                                    editMode: Cm_editMode.edit,
                                    pageData: {
                                        ParentId: treeNode.pId,
                                        ParentName: treeNode.getParentNode().name,
                                        DataId: treeNode.id
                                    }
                                };

                                showForm(options, function (backData) {
                                    if (backData)
                                    {
                                        $.extend(treeNode,backData);
                                        $zTreeObj.updateNode(treeNode);
                                    }
                                });
                            }),
                            $btnRemove = $("<span>", { "class": "button remove","title": "删除" }).click(function () {
                                TopLayer.confirm("删除后无法恢复，是否继续？", { title: "删除询问" }, function ()
                                {
                                    $.Cm_Ajax.postAsync("@Url.Content("~/XT/XTStaticDatasDelete")", { "delId": treeNode.id }).done(function (xhr) {
                                        if (xhr.Ret)
                                        {
                                            $zTreeObj.removeNode(treeNode);
                                        }
                                        TopLayer.msg(xhr.Msg, { icon: xhr.Ret && "1" || "2" });
                                    });
                                });
                            }),
                            $btnUp = $("<span>", { "class": "button meIcon up", "title": "上移" }).click(function () {
                                var $that = $(this),
                                    $li = $that.closest("li"),
                                    $clone = $li.clone(true);

                                $.Cm_Ajax.postAsync("@Url.Content("~/XT/XTStaticDatasSort")", { DataId: treeNode.id, SortFlag: "up" }).done(function (xhr) {
                                    if (xhr.Ret)
                                    {
                                       $li.prev().before($clone);
                                       $li.remove();
                                       refreshNode();
                                    }
                                    TopLayer.msg(xhr.Msg, { icon: xhr.Ret && "1" || "2", time: 300 });
                                });
                            }),
                            $btnDown = $("<span>", { "class": "button meIcon down", "title": "下移" }).click(function () {
                                var $that = $(this),
                                    $li = $that.closest("li"),
                                    $clone = $li.clone(true);
                                $.Cm_Ajax.postAsync("@Url.Content("~/XT/XTStaticDatasSort")", { DataId: treeNode.id, SortFlag: "down" }).done(function (xhr) {
                                    if (xhr.Ret)
                                    {
                                            $li.next().after($clone);
                                            $li.remove();
                                            refreshNode();
                                    }
                                    TopLayer.msg(xhr.Msg, { icon: xhr.Ret && "1" || "2",time:300 });
                                });

                            });
                        
                        var $liBox = $sObj.closest("li"),
                            _liIndex = $liBox.index(),
                            IsFirst = _liIndex == 0,
                            IsLast = _liIndex == $liBox.siblings().length;

                        $sObj.after(
                            $toolBar.append($btnAdd)
                                    .append(!IsRoot && $btnEdit || "")
                                    .append(!IsRoot && $btnRemove || "")
                                    .append(!IsFirst && $btnUp || "")
                                    .append(!IsLast && $btnDown || "")
                            );
                    },
                    removeHoverDom: function (treeId, treeNode) {
                        $("#toolbar_" + treeNode.tId).remove();
                    },
                    selectedMulti: false
                },
                data: {
                    simpleData: {
                        enable: true
                    }
                }
                //, callback: {
                //    onClick: function (event, treeId, treeNode, clickFlag) {
                //    }
                //}
            };

        var zNodes = [
			{
			    name: "静态数据", id: "root", open: true, isLoad: true,
			    children: []
			}
        ];

        var _loadIndex = TopLayer.msg('数据加载中', {
              icon: 16
            , shade: 0.01
            ,time:0
        });

        $.Cm_Ajax.getAsync("@Url.Content("~/odata/T_XT_Data_Entity")" + "?$filter=IsDeleted eq false and ParentId eq 'root'&$orderby=SortIndex&$select=DataId,DataName,SubItemAmount").done(function (xhr)
        {
            $.each(xhr["value"], function (_i, _t)
            {
                zNodes[0].children.push({ name: _t.DataName, id: _t.DataId, isParent: !!_t.SubItemAmount });
            });
            $.fn.zTree.init($("#" + TreeContainer), setting, zNodes);
            $zTreeObj = $.fn.zTree.getZTreeObj(TreeContainer);
        }).always(function () {
           TopLayer.close(_loadIndex);
        });


        function showForm(options,FncallBack)
        {
            var defaults =
                {
                    setting:
                    {
                        area:["800px","300px"],
                        content: "@Url.Content("~/XT/XTStaticDatasEdit")"
                    },
                    callBack: function (backData)
                    {
                        if (FncallBack)
                        {
                            FncallBack(backData);
                        }
                    },
                    datas: options
                };

            $.Cm_Dialog.ShowfrmDialog(defaults);
        }

    });
</script>